#!/bin/bash

OCR_TIFF_FILE=/tmp/__ocr_temp.tiff

__extract_text() {
    if [ ! -d "$2" ]; then
        echo "output directory '$2' does not exist"
        return
    fi

    if [ ! -e "$1" ]; then
        echo "failed: $1 is neither directory nor file."
        return
    fi

    file=$1
    output_dir=$2
    # convert file to tiff using imagemagick
    eval $(convert "$file" -resize 400% -type Grayscale $OCR_TIFF_FILE)

    filename_with_ext=$(basename "$file")

    # extract text from above tiff file
    eval $(tesseract -l eng $OCR_TIFF_FILE "$output_dir/$filename_with_ext")
}

if [ -z "$1" ] || [ "$1" = "-h" ] || [ -z "$2" ]; then
    echo "ocr –– run ocr on given file (or files in directory)"
    echo "usage: ocr <path to file or directory> <output dir>"
    echo "example: ocr ~/Downloads/my-document.jpg ."
    exit
fi

# verify dependencies
hash convert 2>/dev/null || { MISSING_DEPS="$MISSING_DEPS convert"; }
hash tesseract 2>/dev/null || { MISSING_DEPS="$MISSING_DEPS tesseract"; }
if [ ! -z "$MISSING_DEPS" ]; then
    echo "whoops! missing dependencies:"
    echo $MISSING_DEPS
    exit
fi

# handle directory
if [ -d "$1" ] ; then
    for file in "$1"/*.{jpg,jpeg,png} ; do
        # don't process if filename begins with "*."
        if [[ $file = *"/*."* ]]; then
            continue
        fi
        eval "__extract_text '$file' $2"
    done
    exit
fi

# handle single file
if [ -f "$1" ]; then
    # only run ocr on jpg, jpeg, and png
    if [[ "$1" =~ \.(jpg|jpeg|png)$ ]]; then
        eval "__extract_text '$1' $2"

        filename_with_ext=$(basename "$file")
        output=${2}/${filename_with_ext}

        echo ""
        echo "Output: ${output}.txt"
        echo "------------------------------\n"

        eval "cat '${output}.txt'"
    else
        echo "File not supported. Only jpg, jpeg & png are supported."
    fi
exit
fi

echo "operation failed: unhandled error"
